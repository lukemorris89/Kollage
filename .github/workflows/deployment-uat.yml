name: UAT Deployment workflow

on:
  workflow_dispatch: # Allows manually triggering a UAT build from any branch
#  push:
#    branches: [ 'release/**', 'hotfix/**' ] # Whenever new code is pushed to release or hotfix branches

jobs:
  deployment-uat:
    name: UAT Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Decode Keystore
        env:
          ENCODED_KEYSTORE_STRING: ${{ secrets.SIGNING_KEY_STORE_BASE64 }}
          SIGNING_KEY_STORE_PATH: './app/keystore.jks'

        run: |
          echo $ENCODED_KEYSTORE_STRING > keystore-b64.txt
          base64 -d keystore-b64.txt > $SIGNING_KEY_STORE_PATH

      - name: Updates App Version property file
        env:
          APP_VERSION_CODE: ${{ github.run_number }}
        run: |
          source scripts/properties-writer.sh app_version.properties APP_VERSION_CODE $APP_VERSION_CODE

      - name: Assemble App
        env:
          KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
        run: ./gradlew assembleUatRelease

      - name: Decode Google Application Credentials
        env:
          ENCODED_GOOGLE_APPLICATION_CREDENTIALS_STRING: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_BASE64 }}
          GOOGLE_APPLICATION_CREDENTIALS_PATH: './app/google-application-credentials.json'

        run: |
          echo $ENCODED_GOOGLE_APPLICATION_CREDENTIALS_STRING > google-application-credentials-b64.txt
          base64 -d google-application-credentials-b64.txt > $GOOGLE_APPLICATION_CREDENTIALS_PATH

      - name: Upload APK to Firebase Distribution via Gradle plugin
        env:
          APP_DISTRIBUTION_APP_ID: ${{ secrets.UAT_APP_DISTRIBUTION_APP_ID }}
        run: ./gradlew appDistributionUploadUatRelease